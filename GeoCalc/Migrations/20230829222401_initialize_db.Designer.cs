// <auto-generated />
using System;
using GeoCalc.Data.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeoCalc.Migrations
{
    [DbContext(typeof(GeoCalcContext))]
    [Migration("20230829222401_initialize_db")]
    partial class initialize_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeoCalc.Data.Entities.Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WholeGradeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WholeGradeId");

                    b.HasIndex("Id", "Name", "Subject", "Grade", "Description")
                        .IsUnique()
                        .HasFilter("[Description] IS NOT NULL");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("GeoCalc.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Name")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("GeoCalc.Data.Entities.WholeGrade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id", "Grade")
                        .IsUnique();

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("GeoCalc.Data.Entities.Class", b =>
                {
                    b.HasOne("GeoCalc.Data.Entities.User", null)
                        .WithMany("Classes")
                        .HasForeignKey("UserId");

                    b.HasOne("GeoCalc.Data.Entities.WholeGrade", null)
                        .WithMany("Classes")
                        .HasForeignKey("WholeGradeId");
                });

            modelBuilder.Entity("GeoCalc.Data.Entities.User", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("GeoCalc.Data.Entities.WholeGrade", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
